/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package nhom8_project.view.admin;

import java.time.LocalDateTime;
import java.util.ArrayList;
import static java.util.Collections.list;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import nhom8_project.utils.ReadWriteFile;
import nhom8_project.view.loginView;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import nhom8_project.entity.luongthuong.ListLt;
import nhom8_project.entity.luongthuong.LuongThuong;
import nhom8_project.entity.nhanvien.NhanVien;
import nhom8_project.entity.nhanvien.NhanVienList;

/**
 *
 * @author DELL
 */
public final class LuongThuongManagement extends javax.swing.JPanel {
    private  DefaultTableModel tbModel=null;
    private  Object [] Title= new Object[]{"STT","Mã nhân viên","Tên nhân viên","Lương cơ bản","Số ngày làm","Thưởng phạt","Tháng","Năm","Tình trạng","Tổng tiền "};
    private ListLt listlt;  
    private NhanVienList  nvlist,nvlt;    
    private String iCheck;   
    private String Mon,Yea;
    /**
     * Creates new form LuongThuongManagement
     */
    
  
    public LuongThuongManagement() {
        initComponents();        
        BtLtThem.setEnabled(true);
        BtLtSua.setEnabled(true);
        BtLtClear.setEnabled(true);     
        initTable();
        themListNV();
        SelectRowTable();    
        
    }
    
     public void SelectRowTable(){
        
       
        ListSelectionModel listModel=LttableLt.getSelectionModel();
        listModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        listModel.addListSelectionListener(new ListSelectionListener() {
            
            @Override
            public void valueChanged(ListSelectionEvent e) {
                
                int rows[]=LttableLt.getSelectedRows();
                int cols[]=LttableLt.getSelectedColumns();
                
                if(cols.length>0&&rows.length>0){
                    
                    String id=String.valueOf(LttableLt.getValueAt(rows[0],1));
                    String lcb=String.valueOf(LttableLt.getValueAt(rows[0],3));
                    String snl=String.valueOf(LttableLt.getValueAt(rows[0],4)); 
                    String mon=String.valueOf(LttableLt.getValueAt(rows[0],6));
                    String yea=String.valueOf(LttableLt.getValueAt(rows[0],7));
                    String status=String.valueOf(LttableLt.getValueAt(rows[0],8));
                           
                    
                        iCheck=id;
                        TxtLtLcb.setText(lcb);
                        TxtLtSnl.setText(snl);
                        Mon=mon;
                        Yea=yea;
                        
                        if(status.equals("Đã nhận")){
                            RbLtTt.setSelected(true);
                        } else if(status.equals("Chưa nhận")){
                            RbLtTt.setSelected(false);
                        }
                                            
                        CbLtMnv.setEnabled(false);
                        TxtLtLcb.setEnabled(false);
                        TxtLtSnl.setEnabled(false);                        
                        BtLtThem.setEnabled(false);
                        BtLtSua.setEnabled(true);
                        BtLtClear.setEnabled(true);
                                               
                }
            }
        });                   
    }
    
   public void themListNV() {    
        nvlt = new NhanVienList();
        
        ArrayList<NhanVien> listr =new ReadWriteFile().ReadFromNhanVien();
        for(NhanVien nv:listr) {
             if(nv.isStatus()){              
            CbLtMnv.addItem(nv.getId());
             }
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    public void showMessageError(String message){
        JOptionPane.showMessageDialog(this,message,"Thông báo",JOptionPane.ERROR_MESSAGE);
    }
    public void showMessageInf(String message){
        JOptionPane.showMessageDialog(this, message,"Thông báo",JOptionPane.INFORMATION_MESSAGE);
    }
    public String showMessageInput(String message,String title){
        String mess= JOptionPane.showInputDialog(this, message, title, JOptionPane.INFORMATION_MESSAGE);
        return mess;
    }
    public int showMessageConfirm(String message,String title){
        return JOptionPane.showConfirmDialog(this, message, title, JOptionPane.WARNING_MESSAGE);
        
    }
    
    public void initTable(){
        listlt= new ListLt();
        tbModel = new DefaultTableModel();
        tbModel.setColumnIdentifiers(Title);
        listlt.setModel(tbModel);
        LttableLt.setModel(tbModel);
    }
    
    public void ClearLt(){  
        
        TxtLtLcb.setText("");
        TxtLtSnl.setText("");
        
        
              
    }
    
   public void Editlt(){
        listlt = new ListLt();
        ArrayList<LuongThuong> listr = listlt.getList();
       ArrayList<LuongThuong> ltls = listlt.FindListLt(CbLtMnv.getSelectedItem().toString());
       for(LuongThuong ltt:ltls )
           if(ltt.getMonth().equals(Mon)&&ltt.getYear().equals(Yea)){
               int index=listr.indexOf(ltt);
               listr.remove(index);
               ltt.setStatus(RbLtTt.isSelected());
               listr.add(index,ltt);
               new ReadWriteFile().WriteFileLt(listr,"LuongThuong.dat",false);
           }
       showMessageInf("Cập nhật thành công");                   
                    initTable();
                    ClearLt();
       
   }
    
    public void addLuongthuong(){
        LocalDateTime dl= LocalDateTime.now();
        ArrayList<LuongThuong> ltls = listlt.FindListLt(CbLtMnv.getSelectedItem().toString());
        int last= ltls.size()-1;
           if(last<0){
            while(true){
                    ArrayList<LuongThuong> list = new ArrayList<>();
                    LuongThuong lt = new LuongThuong();                    
                    lt.setId(CbLtMnv.getSelectedItem().toString());
                    
                    nvlist = new NhanVienList();
                    
               while(true){                  
                    NhanVien nhv = nvlist.FindById(lt.getId());
                    if(nhv!=null){                                          
                       lt.setName(nhv.getName());                        
                        break;  
                    }
                    showMessageError("Mã nhân viên không tồn tại");
                     break;
                }
                   
                    
                    if(!lt.setSalary(TxtLtLcb.getText().trim())){
                        break;
                    }
                    
                    
                                        
                    if(Integer.valueOf(TxtLtSnl.getText().trim())<=dl.getDayOfMonth()){
                        if(!lt.setWorkingDay(TxtLtSnl.getText().trim())){
                        break;
                        }
                    }else{
                        new loginView().showMessage("Số ngày làm vượt quá số ngày trong tháng");
                        break;
                    }
                    
                    lt.setStatus(RbLtTt.isSelected());
                    
                    if(Integer.parseInt(TxtLtSnl.getText())>0&&Integer.parseInt(TxtLtSnl.getText())<10){
                        float i = (float) ((10-Integer.parseInt(TxtLtSnl.getText()))*(-0.01)*Integer.parseInt(TxtLtLcb.getText()));
                        lt.setThPh(Float.toString(i));
                        float k= (Float.parseFloat(TxtLtLcb.getText())+i);
                        lt.setTong(Float.toString(k));
                    } else if (Integer.parseInt(TxtLtSnl.getText())<=20){
                        lt.setThPh("0");
                        lt.setTong(TxtLtLcb.getText());
                    }else {
                        float i = (float) ((Integer.parseInt(TxtLtSnl.getText())-20)*(0.01)*Integer.parseInt(TxtLtLcb.getText()));
                        lt.setThPh(Float.toString(i));
                        float k= (Float.parseFloat(TxtLtLcb.getText())+i);
                        lt.setTong(Float.toString(k));
                    } 
                    
                    
                       lt.setMonth(Integer.toString(dl.getMonthValue()));
                       lt.setYear(Integer.toString(dl.getYear()));
                                
                    list.add(lt);
                    
                    new ReadWriteFile().WriteFileLt(list,"LuongThuong.dat",true);
                    showMessageInf("Thêm thành công");                   
                    initTable();
                    ClearLt();
                    break;
                        }     
           }    
            else if(Integer.parseInt( ltls.get(last).getMonth())==dl.getMonthValue()&&Integer.parseInt( ltls.get(last).getYear())==dl.getYear()){
                    showMessageError("Nhân viên đã được nhập tiền lương trong thời gian này");
                    initTable();
                    ClearLt();
              } else {
               while(true){
                    ArrayList<LuongThuong> list = new ArrayList<>();
                    LuongThuong lt = new LuongThuong();                    
                    lt.setId(CbLtMnv.getSelectedItem().toString());
                    
                    nvlist = new NhanVienList();
                    
               while(true){                  
                    NhanVien nhv = nvlist.FindById(lt.getId());
                    if(nhv!=null){                                          
                       lt.setName(nhv.getName());                        
                        break;  
                    }
                    showMessageError("Mã nhân viên không tồn tại");
                     break;
                }
                   
                    
                    if(!lt.setSalary(TxtLtLcb.getText().trim())){
                        break;
                    }
                    
                    
                                        
                    
                    if(!lt.setWorkingDay(TxtLtSnl.getText().trim())){
                        break;
                    }
                    lt.setStatus(RbLtTt.isSelected());
                    
                    if(Integer.parseInt(TxtLtSnl.getText())>0&&Integer.parseInt(TxtLtSnl.getText())<10){
                        float i = (float) ((10-Integer.parseInt(TxtLtSnl.getText()))*(-0.01)*Integer.parseInt(TxtLtLcb.getText()));
                        lt.setThPh(Float.toString(i));
                        float k= (Float.parseFloat(TxtLtLcb.getText())+i);
                        lt.setTong(Float.toString(k));
                    } else if (Integer.parseInt(TxtLtSnl.getText())<=20){
                        lt.setThPh("0");
                        lt.setTong(TxtLtLcb.getText());
                    }else {
                        float i = (float) ((Integer.parseInt(TxtLtSnl.getText())-20)*(0.01)*Integer.parseInt(TxtLtLcb.getText()));
                        lt.setThPh(Float.toString(i));
                        float k= (Float.parseFloat(TxtLtLcb.getText())+i);
                        lt.setTong(Float.toString(k));
                    } 
                    
                    
                       lt.setMonth(Integer.toString(dl.getMonthValue()));
                       lt.setYear(Integer.toString(dl.getYear()));
                                
                    list.add(lt);
                    
                    new ReadWriteFile().WriteFileLt(list,"LuongThuong.dat",true);
                    showMessageInf("Thêm thành công");                   
                    initTable();
                    ClearLt();
                    break;
                        }     
              }
    }
        
    
    
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel01 = new javax.swing.JLabel();
        data1 = new javax.swing.JPanel();
        jLabel02 = new javax.swing.JLabel();
        CbLtMnv = new javax.swing.JComboBox<>();
        jLabel03 = new javax.swing.JLabel();
        jLabel04 = new javax.swing.JLabel();
        TxtLtLcb = new javax.swing.JTextField();
        RbLtTt = new javax.swing.JRadioButton();
        jLabel07 = new javax.swing.JLabel();
        TxtLtSnl = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        LttableLt = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        BtLtClear = new javax.swing.JButton();
        BtLtThem = new javax.swing.JButton();
        BtLtSua = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();

        jLabel01.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel01.setForeground(new java.awt.Color(0, 0, 255));
        jLabel01.setText("Lương thưởng");

        data1.setName(""); // NOI18N

        jLabel02.setText("Mã Nhân Viên");

        CbLtMnv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbLtMnvActionPerformed(evt);
            }
        });

        jLabel03.setText("Lương cơ bản");

        jLabel04.setText("Số ngày làm");

        RbLtTt.setText("Đã nhận");
        RbLtTt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RbLtTtActionPerformed(evt);
            }
        });

        jLabel07.setText("Tình trạng");

        javax.swing.GroupLayout data1Layout = new javax.swing.GroupLayout(data1);
        data1.setLayout(data1Layout);
        data1Layout.setHorizontalGroup(
            data1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(data1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel07, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel04, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel02, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                    .addComponent(jLabel03, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(data1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CbLtMnv, 0, 354, Short.MAX_VALUE)
                    .addComponent(TxtLtSnl)
                    .addComponent(TxtLtLcb)
                    .addComponent(RbLtTt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        data1Layout.setVerticalGroup(
            data1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data1Layout.createSequentialGroup()
                .addGroup(data1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CbLtMnv, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel02))
                .addGap(30, 30, 30)
                .addGroup(data1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel04)
                    .addComponent(TxtLtSnl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(data1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel03)
                    .addComponent(TxtLtLcb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(data1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel07)
                    .addComponent(RbLtTt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        LttableLt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(LttableLt);

        BtLtClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nhom8_project/icon/Button-Close-icon-16.png"))); // NOI18N
        BtLtClear.setText("Clear");
        BtLtClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtLtClearActionPerformed(evt);
            }
        });

        BtLtThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nhom8_project/icon/new-icon-16.png"))); // NOI18N
        BtLtThem.setText("Thêm");
        BtLtThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtLtThemActionPerformed(evt);
            }
        });

        BtLtSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nhom8_project/icon/Actions-document-edit-icon-16.png"))); // NOI18N
        BtLtSua.setText("Sửa");
        BtLtSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtLtSuaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BtLtThem, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BtLtSua, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(BtLtClear, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtLtThem, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtLtSua, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(BtLtClear, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1042, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator3)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel01, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(data1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel01)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jSeparator2)
                        .addComponent(data1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BtLtSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtLtSuaActionPerformed
            try {
            Editlt();
        } catch (Exception e) {
            showMessageError("Sửa bị lỗi ");
        }
    }//GEN-LAST:event_BtLtSuaActionPerformed

    private void BtLtThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtLtThemActionPerformed
        try {
            addLuongthuong();
        } catch (Exception e) {
            showMessageError("Thêm bị lỗi ");
        }
    }//GEN-LAST:event_BtLtThemActionPerformed

    private void BtLtClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtLtClearActionPerformed
        try {
            ClearLt();
            BtLtThem.setEnabled(true);
            BtLtSua.setEnabled(false);
            BtLtClear.setEnabled(false);
            CbLtMnv.setEnabled(true);
            TxtLtLcb.setEnabled(true);
            TxtLtSnl.setEnabled(true);
            

        } catch (Exception e) {
            showMessageError("Lỗi Clear");
        }
    }//GEN-LAST:event_BtLtClearActionPerformed

    private void RbLtTtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RbLtTtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RbLtTtActionPerformed

    private void CbLtMnvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbLtMnvActionPerformed

    }//GEN-LAST:event_CbLtMnvActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtLtClear;
    private javax.swing.JButton BtLtSua;
    private javax.swing.JButton BtLtThem;
    private javax.swing.JComboBox<String> CbLtMnv;
    private javax.swing.JTable LttableLt;
    private javax.swing.JRadioButton RbLtTt;
    private javax.swing.JTextField TxtLtLcb;
    private javax.swing.JTextField TxtLtSnl;
    private javax.swing.JPanel data1;
    private javax.swing.JLabel jLabel01;
    private javax.swing.JLabel jLabel02;
    private javax.swing.JLabel jLabel03;
    private javax.swing.JLabel jLabel04;
    private javax.swing.JLabel jLabel07;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    // End of variables declaration//GEN-END:variables
}
